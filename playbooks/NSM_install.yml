---
- name: Install and Configure NSM Lite
  hosts: all
  become: yes

  tasks:
    - name: Import RPM GPG key for ELRepo
      ansible.builtin.rpm_key:
        state: present
        key: https://www.elrepo.org/RPM-GPG-KEY-elrepo.org

    - name: Enable CodeReady Linux Builder (CRB) repository
      ansible.builtin.command:
        cmd: dnf config-manager --set-enabled crb

    - name: Install EPEL Repository
      ansible.builtin.dnf:
        name: epel-release
        state: present

    - name: Add Docker CE Repository
      ansible.builtin.dnf:
        name: dnf-utils
        state: present
      register: dnf_utils_installed

    - name: Add Docker repository
      ansible.builtin.command:
        cmd: dnf config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
      when: dnf_utils_installed is changed

    - name: Update all packages to the latest version
      ansible.builtin.dnf:
        name: '*'
        state: latest

    - name: Install general system dependencies
      ansible.builtin.dnf:
        name:
          - tar
          - htop
          - git
          - vim
          - wget
          - util-linux-user
          - net-tools
          - unzip
          - expect
        state: present

    - name: Install dependencies for Zeek
      ansible.builtin.dnf:
        name:
          - cmake
          - make
          - gcc
          - gcc-c++
          - flex
          - bison
          - libpcap-devel
          - openssl-devel
          - python3
          - python3-devel
          - swig
          - zlib-devel
        state: present

    - name: Install dependencies for Suricata
      ansible.builtin.dnf:
        name:
          - pcre-devel
          - libyaml-devel
          - jansson-devel
          - lua-devel
          - file-devel
          - nspr-devel
          - nss-devel
          - libcap-ng-devel
          - libmaxminddb-devel
          - lz4-devel
          - rustc
          - cargo
          - python3-pyyaml
        state: present

    - name: Ensure pip is installed (Python package manager)
      ansible.builtin.dnf:
        name: python3-pip
        state: present

    - name: Install pexpect using pip
      ansible.builtin.pip:
        name: pexpect
        state: present

- name: Install and Configure Elasticsearch
  hosts: all
  become: yes
  vars:
    elastic_version: "8.7.0"

  tasks:
    - name: Import Elasticsearch GPG key
      ansible.builtin.rpm_key:
        state: present
        key: https://artifacts.elastic.co/GPG-KEY-elasticsearch

    - name: Set vm.max_map_count for Elasticsearch
      ansible.builtin.sysctl:
        name: vm.max_map_count
        value: '262144'
        state: present
        reload: yes

    - name: Download Elasticsearch RPM
      ansible.builtin.get_url:
        url: "https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-{{ elastic_version }}-x86_64.rpm"
        dest: "/tmp/elasticsearch-{{ elastic_version }}-x86_64.rpm"

    - name: Install Elasticsearch
      ansible.builtin.package:
        name: "/tmp/elasticsearch-{{ elastic_version }}-x86_64.rpm"
        state: present

    - name: Copy elasticsearch.yml configuration
      ansible.builtin.copy:
        src: ../elasticsearch.yml
        dest: /etc/elasticsearch/elasticsearch.yml
        backup: yes
      notify: 
        - reload elasticsearch

    - name: Enable and start Elasticsearch service
      ansible.builtin.systemd:
        name: elasticsearch.service
        enabled: yes
        state: started

    - name: Set password for 'elastic' user
      ansible.builtin.expect:
        command: "sudo /usr/share/elasticsearch/bin/elasticsearch-reset-password -u elastic -i"
        responses:
          (?i)Please confirm that you would like to continue \[y/N\]: "y"
          (?i)Enter password for \[elastic\]: "password"
          (?i)Re-enter password for \[elastic\]: "password"
        timeout: 60
      become: yes
      ignore_errors: yes

    - name: Set password for 'kibana_system' user
      ansible.builtin.expect:
        command: "sudo /usr/share/elasticsearch/bin/elasticsearch-reset-password -u kibana_system -i"
        responses:
          (?i)Please confirm that you would like to continue \[y/N\]: "y"
          (?i)Enter password for \[kibana_system\]: "password"
          (?i)Re-enter password for \[kibana_system\]: "password"
        timeout: 60
      become: yes
      ignore_errors: yes


  handlers:
    - name: reload elasticsearch
      ansible.builtin.systemd:
        name: elasticsearch.service
        state: restarted


